<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="39" failures="0" errors="0" time="3.284">
  <testsuite name="API getProject" errors="0" failures="0" skipped="0" timestamp="2024-01-06T17:36:35" time="1.451" tests="4">
    <testcase classname="API getProject GET should return 401 if no cookie is provided" name="API getProject GET should return 401 if no cookie is provided" time="0.04">
    </testcase>
    <testcase classname="API getProject GET should return 401 if cookie is not valid" name="API getProject GET should return 401 if cookie is not valid" time="0.008">
    </testcase>
    <testcase classname="API getProject GET should return 404 if project does not exist" name="API getProject GET should return 404 if project does not exist" time="0.018">
    </testcase>
    <testcase classname="API getProject GET should return 200 if project exists" name="API getProject GET should return 200 if project exists" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="API updateProject" errors="0" failures="0" skipped="0" timestamp="2024-01-06T17:36:35" time="1.459" tests="5">
    <testcase classname="API updateProject PUT should return 401 if no cookie is provided" name="API updateProject PUT should return 401 if no cookie is provided" time="0.082">
    </testcase>
    <testcase classname="API updateProject PUT should return 401 if no authorization header and no cookie is provided" name="API updateProject PUT should return 401 if no authorization header and no cookie is provided" time="0.002">
    </testcase>
    <testcase classname="API updateProject PUT should return 401 if cookie is not valid" name="API updateProject PUT should return 401 if cookie is not valid" time="0.004">
    </testcase>
    <testcase classname="API updateProject PUT should return 400 if there is a wrong parameter" name="API updateProject PUT should return 400 if there is a wrong parameter" time="0.022">
    </testcase>
    <testcase classname="API updateProject PUT should return 200 if name and description are provided" name="API updateProject PUT should return 200 if name and description are provided" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="API getProjects" errors="0" failures="0" skipped="0" timestamp="2024-01-06T17:36:35" time="1.443" tests="3">
    <testcase classname="API getProjects GET should return 401 if no cookie is provided" name="API getProjects GET should return 401 if no cookie is provided" time="0.049">
    </testcase>
    <testcase classname="API getProjects GET should return 401 if cookie is not valid" name="API getProjects GET should return 401 if cookie is not valid" time="0.005">
    </testcase>
    <testcase classname="API getProjects GET should return 200 if cookie is valid" name="API getProjects GET should return 200 if cookie is valid" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="API createProject" errors="0" failures="0" skipped="0" timestamp="2024-01-06T17:36:35" time="1.466" tests="8">
    <testcase classname="API createProject POST should return 401 if no cookie is provided" name="API createProject POST should return 401 if no cookie is provided" time="0.05">
    </testcase>
    <testcase classname="API createProject POST should return 401 if no authorization header and no cookie is provided" name="API createProject POST should return 401 if no authorization header and no cookie is provided" time="0.003">
    </testcase>
    <testcase classname="API createProject POST should return 401 if cookie is not valid" name="API createProject POST should return 401 if cookie is not valid" time="0.001">
    </testcase>
    <testcase classname="API createProject POST should return 400 if no name is provided" name="API createProject POST should return 400 if no name is provided" time="0.014">
    </testcase>
    <testcase classname="API createProject POST should return 400 if no description is provided" name="API createProject POST should return 400 if no description is provided" time="0.006">
    </testcase>
    <testcase classname="API createProject POST should return 400 if there is a wrong parameter" name="API createProject POST should return 400 if there is a wrong parameter" time="0.004">
    </testcase>
    <testcase classname="API createProject POST should return 500 if there is a server error" name="API createProject POST should return 500 if there is a server error" time="0.019">
    </testcase>
    <testcase classname="API createProject POST should return 200 if name and description are provided" name="API createProject POST should return 200 if name and description are provided" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="API refreshToken" errors="0" failures="0" skipped="0" timestamp="2024-01-06T17:36:35" time="1.478" tests="3">
    <testcase classname="API refreshToken POST should return 401 if no cookie is provided" name="API refreshToken POST should return 401 if no cookie is provided" time="0.013">
    </testcase>
    <testcase classname="API refreshToken POST should return 401 if cookie is not valid" name="API refreshToken POST should return 401 if cookie is not valid" time="0.004">
    </testcase>
    <testcase classname="API refreshToken POST should return 200 if cookie is valid" name="API refreshToken POST should return 200 if cookie is valid" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="deleteProject" errors="0" failures="0" skipped="0" timestamp="2024-01-06T17:36:36" time="0.193" tests="2">
    <testcase classname="deleteProject should return false if there is no project with the given id" name="deleteProject should return false if there is no project with the given id" time="0.012">
    </testcase>
    <testcase classname="deleteProject should return true if there is a project with the given id" name="deleteProject should return true if there is a project with the given id" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="API loginUser" errors="0" failures="0" skipped="0" timestamp="2024-01-06T17:36:35" time="2.322" tests="5">
    <testcase classname="API loginUser POST should return 401 if username is empty" name="API loginUser POST should return 401 if username is empty" time="0.064">
    </testcase>
    <testcase classname="API loginUser POST should return 401 if password is empty" name="API loginUser POST should return 401 if password is empty" time="0.005">
    </testcase>
    <testcase classname="API loginUser POST should return 401 if password is different" name="API loginUser POST should return 401 if password is different" time="0.305">
    </testcase>
    <testcase classname="API loginUser POST should return 200 if credentials are good" name="API loginUser POST should return 200 if credentials are good" time="0.286">
    </testcase>
    <testcase classname="API loginUser POST should put a JWT token into a cookie" name="API loginUser POST should put a JWT token into a cookie" time="0.285">
    </testcase>
  </testsuite>
  <testsuite name="API registerUser" errors="0" failures="0" skipped="0" timestamp="2024-01-06T17:36:35" time="2.618" tests="9">
    <testcase classname="API registerUser POST should return 400 if no email is provided" name="API registerUser POST should return 400 if no email is provided" time="0.024">
    </testcase>
    <testcase classname="API registerUser POST should return 400 if no password is provided" name="API registerUser POST should return 400 if no password is provided" time="0.003">
    </testcase>
    <testcase classname="API registerUser POST should return 400 if no username is provided" name="API registerUser POST should return 400 if no username is provided" time="0.003">
    </testcase>
    <testcase classname="API registerUser POST should return 409 if user with given username already exists" name="API registerUser POST should return 409 if user with given username already exists" time="0.023">
    </testcase>
    <testcase classname="API registerUser POST should return 409 if user with given email already exists" name="API registerUser POST should return 409 if user with given email already exists" time="0.008">
    </testcase>
    <testcase classname="API registerUser POST should return 500 if user group does not exist" name="API registerUser POST should return 500 if user group does not exist" time="0.318">
    </testcase>
    <testcase classname="API registerUser POST should return 200 if user is created" name="API registerUser POST should return 200 if user is created" time="0.299">
    </testcase>
    <testcase classname="API registerUser POST should return 200 and assigned user group if user is created" name="API registerUser POST should return 200 and assigned user group if user is created" time="0.295">
    </testcase>
    <testcase classname="API registerUser POST should return 200 and &apos;USER&apos; as a default user group if user is created" name="API registerUser POST should return 200 and &apos;USER&apos; as a default user group if user is created" time="0.289">
    </testcase>
  </testsuite>
</testsuites>